package com.muggle.cloudpicturebackend.exception;

import lombok.Getter;

/**
 * 错误码枚举类，用于定义系统中可能出现的各种业务错误情况。
 * 每个枚举常量包含一个状态码和对应的错误信息，方便在异常处理时统一管理和返回明确的错误反馈。
 */
@Getter
public enum ErrorCode {

    /**
     * 操作成功的状态码和信息。
     * 当业务操作正常完成时，使用该状态码表示操作成功。
     */
    SUCCESS(0, "ok"),

    /**
     * 请求参数错误的状态码和信息。
     * 当客户端传递的请求参数不符合业务逻辑要求时，抛出该错误。
     */
    PARAMS_ERROR(40000, "请求参数错误"),

    /**
     * 未登录错误的状态码和信息。
     * 当用户未进行登录操作却尝试访问需要登录才能访问的资源时，抛出该错误。
     */
    NOT_LOGIN_ERROR(40100, "未登录"),

    /**
     * 无权限错误的状态码和信息。
     * 当用户虽然已登录，但没有足够的权限访问特定资源时，抛出该错误。
     */
    NO_AUTH_ERROR(40101, "无权限"),

    /**
     * 请求数据不存在的状态码和信息。
     * 当客户端请求的数据在系统中不存在时，抛出该错误。
     */
    NOT_FOUND_ERROR(40400, "请求数据不存在"),

    /**
     * 禁止访问的状态码和信息。
     * 当系统明确禁止用户访问某资源时，抛出该错误，通常与权限无关，可能是资源本身的限制。
     */
    FORBIDDEN_ERROR(40300, "禁止访问"),

    /**
     * 系统内部异常的状态码和信息。
     * 当系统在处理业务逻辑过程中出现未知的内部错误时，抛出该错误。
     */
    SYSTEM_ERROR(50000, "系统内部异常"),

    /**
     * 操作失败的状态码和信息。
     * 当业务操作因各种原因（如数据冲突、外部服务调用失败等）未能成功完成时，抛出该错误。
     */
    OPERATION_ERROR(50001, "操作失败");

    /**
     * 状态码，用于唯一标识不同的错误类型。
     */
    private final int code;

    /**
     * 错误信息，用于描述该错误类型的具体含义，方便开发者和用户理解。
     */
    private final String message;

    /**
     * 枚举类的构造函数，用于初始化每个枚举常量的状态码和错误信息。
     *
     * @param code    状态码
     * @param message 错误信息
     */
    ErrorCode(int code, String message) {
        this.code = code;
        this.message = message;
    }

}